{"version":3,"sources":["app/views/ui-kits/tooltip/AppTooltip.jsx","../node_modules/react-bootstrap/esm/Button.js"],"names":["AppTooltip","state","variantList","routeSegments","name","path","className","title","map","placement","i","key","overlay","id","variant","trigger","delay","show","hide","Component","Button","React","forwardRef","_ref","ref","bsPrefix","size","active","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","displayName","defaultProps"],"mappings":"yNAKMA,E,4MACJC,MAAQ,G,EAERC,YAAc,CAAC,UAAW,UAAW,OAAQ,W,uDAEnC,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,CACEC,cAAe,CACb,CAAEC,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,cAIZ,yBAAKE,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAYC,MAAM,kBAChB,uBAAGD,UAAU,aAAb,mGAIA,yBAAKA,UAAU,OACZ,CAAC,MAAO,QAAS,SAAU,QAAQE,KAAI,SAACC,EAAWC,GAAZ,OACtC,yBAAKJ,UAAU,WAAWK,IAAKF,GAC7B,kBAAC,IAAD,CACEA,UAAWA,EACXG,QACE,kBAAC,IAAD,CAASC,GAAE,kBAAaJ,IAAxB,cACa,gCAASA,GADtB,MAKF,kBAAC,IAAD,CAAQK,QAAS,EAAKZ,YAAYQ,IAAlC,cACcD,YAU5B,yBAAKH,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAYC,MAAM,oBAChB,uBAAGD,UAAU,aAAb,yBACA,yBAAKA,UAAU,OACZ,CAAC,MAAO,QAAS,SAAU,QAAQE,KAAI,SAACC,EAAWC,GAAZ,OACtC,yBAAKJ,UAAU,WAAWK,IAAKF,GAC7B,kBAAC,IAAD,CACEM,QAAQ,QACRN,UAAWA,EACXG,QACE,kBAAC,IAAD,CAASC,GAAE,kBAAaJ,IAAxB,cACa,gCAASA,GADtB,MAKF,kBAAC,IAAD,CAAQK,QAAS,EAAKZ,YAAYQ,IAAlC,cACcD,YAU5B,yBAAKH,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAYC,MAAM,mBAChB,yBAAKD,UAAU,OACZ,CAAC,MAAO,QAAS,SAAU,QAAQE,KAAI,SAACC,EAAWC,GAAZ,OACtC,yBAAKJ,UAAU,WAAWK,IAAKF,GAC7B,kBAAC,IAAD,CACEA,UAAWA,EACXO,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BN,QACE,kBAAC,IAAD,CAASC,GAAE,kBAAaJ,IAAxB,cACa,gCAASA,GADtB,MAKF,kBAAC,IAAD,CAAQK,QAAS,EAAKZ,YAAYQ,IAAlC,cACcD,iB,GAvFXU,aAqGVnB,a,iCC1Gf,oEAYIoB,EAASC,IAAMC,YAAW,SAAUC,EAAMC,GAC5C,IAAIC,EAAWF,EAAKE,SAChBX,EAAUS,EAAKT,QACfY,EAAOH,EAAKG,KACZC,EAASJ,EAAKI,OACdrB,EAAYiB,EAAKjB,UACjBsB,EAAQL,EAAKK,MACbC,EAAON,EAAKM,KACZC,EAAKP,EAAKO,GACVC,EAAQC,YAA8BT,EAAM,CAAC,WAAY,UAAW,OAAQ,SAAU,YAAa,QAAS,OAAQ,OAEpHU,EAASC,YAAmBT,EAAU,OACtCU,EAAUC,IAAW9B,EAAW2B,EAAQN,GAAU,SAAUM,EAAS,IAAMnB,EAASc,GAASK,EAAS,SAAUP,GAAQO,EAAS,IAAMP,GAE3I,GAAIK,EAAMM,KACR,OAAOhB,IAAMiB,cAAcC,IAAYC,YAAS,GAAIT,EAAO,CACzDD,GAAIA,EACJN,IAAKA,EACLlB,UAAW8B,IAAWD,EAASJ,EAAMU,UAAY,eAIjDjB,IACFO,EAAMP,IAAMA,GAGTM,IACHC,EAAMF,KAAOA,GAGf,IAAIV,EAAYW,GAAM,SACtB,OAAOT,IAAMiB,cAAcnB,EAAWqB,YAAS,GAAIT,EAAO,CACxDzB,UAAW6B,QAGff,EAAOsB,YAAc,SACrBtB,EAAOuB,aA1CY,CACjB7B,QAAS,UACTa,QAAQ,EACRc,UAAU,EACVZ,KAAM,UAuCOT","file":"static/js/94.6a6be272.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport { OverlayTrigger, Tooltip, Button } from \"react-bootstrap\";\n\nclass AppTooltip extends Component {\n  state = {};\n\n  variantList = [\"primary\", \"success\", \"info\", \"warning\"];\n\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Tooltip\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-12 mb-4\">\n            <SimpleCard title=\"Basic Tooltips\">\n              <p className=\"pt-0 mt-0\">\n                Hover over the buttons below to see the four tooltips\n                directions: top, right, bottom, and left.\n              </p>\n              <div className=\"row\">\n                {[\"top\", \"right\", \"bottom\", \"left\"].map((placement, i) => (\n                  <div className=\"col-md-3\" key={placement}>\n                    <OverlayTrigger\n                      placement={placement}\n                      overlay={\n                        <Tooltip id={`tooltip-${placement}`}>\n                          Tooltip on <strong>{placement}</strong>.\n                        </Tooltip>\n                      }\n                    >\n                      <Button variant={this.variantList[i]}>\n                        Tooltip on {placement}\n                      </Button>\n                    </OverlayTrigger>\n                  </div>\n                ))}\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-12 mb-4\">\n            <SimpleCard title=\"Tooltips Trigger\">\n              <p className=\"pt-0 mt-0\">Click to show tooltip</p>\n              <div className=\"row\">\n                {[\"top\", \"right\", \"bottom\", \"left\"].map((placement, i) => (\n                  <div className=\"col-md-3\" key={placement}>\n                    <OverlayTrigger\n                      trigger=\"click\"\n                      placement={placement}\n                      overlay={\n                        <Tooltip id={`tooltip-${placement}`}>\n                          Tooltip on <strong>{placement}</strong>.\n                        </Tooltip>\n                      }\n                    >\n                      <Button variant={this.variantList[i]}>\n                        Tooltip on {placement}\n                      </Button>\n                    </OverlayTrigger>\n                  </div>\n                ))}\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-12 mb-4\">\n            <SimpleCard title=\"Tooltip Options\">\n              <div className=\"row\">\n                {[\"top\", \"right\", \"bottom\", \"left\"].map((placement, i) => (\n                  <div className=\"col-md-3\" key={placement}>\n                    <OverlayTrigger\n                      placement={placement}\n                      delay={{ show: 250, hide: 400 }}\n                      overlay={\n                        <Tooltip id={`tooltip-${placement}`}>\n                          Tooltip on <strong>{placement}</strong>.\n                        </Tooltip>\n                      }\n                    >\n                      <Button variant={this.variantList[i]}>\n                        Tooltip on {placement}\n                      </Button>\n                    </OverlayTrigger>\n                  </div>\n                ))}\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppTooltip;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (!as) {\n    props.type = type;\n  }\n\n  var Component = as || 'button';\n  return React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}