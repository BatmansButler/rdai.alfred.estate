{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonToolbar.js","../node_modules/react-bootstrap/esm/Spinner.js","@gull/components/buttons/LoadingButton.jsx","app/views/ui-kits/buttons/AppButton.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js"],"names":["ButtonToolbar","React","forwardRef","_ref","ref","bsPrefix","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","role","Spinner","variant","animation","size","children","_ref$as","as","Component","bsSpinnerPrefix","LoadingButton","loading","spinnerSize","buttonSize","Button","AppButton","variantList","socialButtonList","name","icon","state","routeSegments","path","Row","Col","lg","md","sm","xs","SimpleCard","title","this","map","color","key","slice","item","ind","active","block","type","classes","href","SafeAnchor","disabled","DEVICE_SIZES","spans","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","apply","concat","noGutters","decoratedBsPrefix","sizePrefix","cols"],"mappings":"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","file":"static/js/66.c946e168.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React from \"react\";\nimport { Spinner, Button } from \"react-bootstrap\";\n\nconst LoadingButton = ({\n  variant = \"primary\",\n  loading = false,\n  animation,\n  spinnerSize,\n  buttonSize,\n  children,\n  className\n}) => {\n  return (\n    <Button\n      variant={variant}\n      className={`d-flex flex-row align-items-center ${className}`}\n      size={buttonSize}\n    >\n      {loading && (\n        <Spinner className=\"mr-2\" animation={animation} size={spinnerSize} />\n      )}\n      {children}\n    </Button>\n  );\n};\n\nexport default LoadingButton;\n","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Row, Col, Button, ButtonToolbar } from \"react-bootstrap\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport LoadingButton from \"@gull/components/buttons/LoadingButton\";\n\nclass AppButton extends Component {\n  variantList = [\n    \"primary\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"info\",\n    \"light\",\n    \"dark\"\n  ];\n\n  socialButtonList = [\n    {\n      name: \"facebook\",\n      icon: \"i-Facebook-2\"\n    },\n    {\n      name: \"google\",\n      icon: \"i-Google-Plus\"\n    },\n    {\n      name: \"twitter\",\n      icon: \"i-Twitter\"\n    },\n    {\n      name: \"instagram\",\n      icon: \"i-Instagram\"\n    },\n    {\n      name: \"linkedin\",\n      icon: \"i-Linkedin-2\"\n    },\n    {\n      name: \"dribble\",\n      icon: \"i-Dribble\"\n    },\n    {\n      name: \"youtube\",\n      icon: \"i-Youtube\"\n    }\n  ];\n\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Buttons\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Default Buttons\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className=\"m-1 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons Rounded\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className=\"btn-rounded m-1 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons Raised\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className={`btn-raised btn-raised-${color} m-1 text-capitalize`}\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons outline\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={`outline-${color}`}\n                    className=\"m-1 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Button block\">\n                {this.variantList.slice(0, 3).map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className=\"d-block w-100 my-2 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons outline\">\n                <div>\n                  {this.variantList.slice(0, 3).map(color => (\n                    <Button\n                      key={color}\n                      variant={color}\n                      size=\"sm\"\n                      className=\"m-1 text-capitalize\"\n                    >\n                      {color}\n                    </Button>\n                  ))}\n                </div>\n                <div>\n                  {this.variantList.slice(0, 3).map(color => (\n                    <Button\n                      key={color}\n                      variant={color}\n                      className=\"m-1 text-capitalize\"\n                    >\n                      {color}\n                    </Button>\n                  ))}\n                </div>\n                <div>\n                  {this.variantList.slice(0, 3).map(color => (\n                    <Button\n                      key={color}\n                      variant={color}\n                      size=\"lg\"\n                      className=\"m-1 text-capitalize\"\n                    >\n                      {color}\n                    </Button>\n                  ))}\n                </div>\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Styles- Button with Icons\">\n                <Button\n                  variant=\"primary\"\n                  className=\"btn-icon m-1 text-capitalize\"\n                >\n                  <span className=\"ul-btn__icon\">\n                    <i className=\"i-Gear-2\"></i>\n                  </span>\n                  <span className=\"ul-btn__text\">With Icon</span>\n                </Button>\n                <Button variant=\"info\" className=\"btn-icon m-1 text-capitalize\">\n                  <span className=\"ul-btn__icon\">\n                    <i className=\"i-RSS\"></i>\n                  </span>\n                </Button>\n                <Button\n                  variant=\"success\"\n                  className=\"btn-icon m-1 text-capitalize\"\n                >\n                  button\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  className=\"btn-icon m-1 text-capitalize\"\n                >\n                  <span className=\"ul-btn__icon\">\n                    <i className=\"i-Shutter\"></i>\n                  </span>\n                </Button>\n                <Button\n                  variant=\"warning\"\n                  className=\"btn-icon m-1 text-capitalize\"\n                >\n                  <span className=\"ul-btn__icon\">\n                    <i className=\"i-Atom\"></i>\n                  </span>\n                  <span className=\"ul-btn__text\">Atom</span>\n                </Button>\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons Ripple\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className=\"ripple m-1 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"social\" className=\"mb-3\">\n                <div className=\"mb-3\">\n                  {this.socialButtonList.map(item => (\n                    <Button\n                      key={item.name}\n                      variant=\"primary\"\n                      className={`btn-${item.name} btn-icon m-1 text-capitalize`}\n                    >\n                      <span className=\"ul-btn__icon\">\n                        <i className={item.icon}></i>\n                      </span>\n                      <span className=\"ul-btn__text text-capitalize\">\n                        {item.name}\n                      </span>\n                    </Button>\n                  ))}\n                </div>\n                <div className=\"mb-3\">\n                  {this.socialButtonList.map(item => (\n                    <Button\n                      key={item.name}\n                      variant=\"primary\"\n                      className={`btn-${item.name} btn-icon m-1 text-capitalize`}\n                    >\n                      <span className=\"ul-btn__icon\">\n                        <i className={item.icon}></i>\n                      </span>\n                    </Button>\n                  ))}\n                </div>\n                <div>\n                  {this.socialButtonList.map(item => (\n                    <Button\n                      key={item.name}\n                      variant=\"primary\"\n                      className={`btn-${item.name} rounded-circle btn-icon m-1 text-capitalize`}\n                    >\n                      <span className=\"ul-btn__icon\">\n                        <i className={item.icon}></i>\n                      </span>\n                    </Button>\n                  ))}\n                </div>\n              </SimpleCard>\n\n              <SimpleCard title=\"Button Group\">\n                <ButtonToolbar>\n                  {this.variantList.map(color => (\n                    <Button\n                      key={color}\n                      variant={`outline-${color}`}\n                      className=\"text-capitalize\"\n                    >\n                      {color}\n                    </Button>\n                  ))}\n                </ButtonToolbar>\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Loading Button\">\n                <div className=\"mb-3 d-flex flex-wrap\">\n                  {this.variantList.slice(0, 3).map((color, ind) => (\n                    <LoadingButton\n                      key={ind}\n                      className=\"text-capitalize m-1\"\n                      variant={color}\n                      loading={true}\n                      animation=\"border\"\n                      spinnerSize=\"sm\"\n                    >\n                      {color} loader\n                    </LoadingButton>\n                  ))}\n                </div>\n                <div className=\"mb-3 d-flex flex-wrap\">\n                  {this.variantList.slice(0, 3).map((color, ind) => (\n                    <LoadingButton\n                      key={ind}\n                      className=\"text-capitalize m-1\"\n                      variant={color}\n                      loading={true}\n                      animation=\"grow\"\n                      spinnerSize=\"sm\"\n                    >\n                      {color} loader\n                    </LoadingButton>\n                  ))}\n                </div>\n                <div className=\"d-flex flex-wrap\">\n                  {this.variantList.slice(0, 3).map((color, ind) => (\n                    <LoadingButton\n                      key={ind}\n                      className=\"text-capitalize m-1\"\n                      variant={color}\n                      loading={true}\n                      animation=\"border\"\n                      spinnerSize=\"lg\"\n                      buttonSize=\"lg\"\n                    >\n                      {color} loader\n                    </LoadingButton>\n                  ))}\n                </div>\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppButton;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (!as) {\n    props.type = type;\n  }\n\n  var Component = as || 'button';\n  return React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;"],"sourceRoot":""}