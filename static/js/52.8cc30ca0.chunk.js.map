{"version":3,"sources":["../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","@gull/components/accordions/RightArrowAccordion.jsx","../node_modules/react-bootstrap/esm/Accordion.js","app/views/ui-kits/collapsibles/AppCollapsibles.jsx","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js"],"names":["_collapseStyles","MARGINS","height","width","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","dimension","getDimensionValue","elem","value","toUpperCase","slice","margins","parseInt","css","Collapse","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","handleEnter","style","getDimension","handleEntering","_getScrollDimensionValue","handleEntered","handleExit","props","triggerBrowserReflow","handleExiting","_inheritsLoose","_proto","prototype","render","_this2","_this$props","onEnter","onEntering","onEntered","onExit","onExiting","className","children","_objectWithoutPropertiesLoose","createChainedFunction","React","createElement","Transition","_extends","addEndListener","transitionEnd","role","state","innerProps","cloneElement","classNames","Component","AccordionCollapse","forwardRef","_ref","ref","eventKey","contextEventKey","useContext","AccordionContext","Children","only","displayName","RightArrowAccordion","title","icon","useState","openItem","setOpenItem","Header","as","onClick","classList","Body","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","bsPrefix","onSelect","controlledProps","useBootstrapPrefix","Provider","SelectableContext","Toggle","AccordionToggle","AppCollapsible","routeSegments","name","path","Button","subtitle","map","id","key","toString","defaultActiveKey","Card","color","createContext","makeEventKey","href","String","variant","size","active","block","type","prefix","classes","SafeAnchor","disabled","_ref$as","accordionOnClick","e","useAccordionToggle"],"mappings":"sHAIIA,E,oGASAC,EAAU,CACZC,OAAQ,CAAC,YAAa,gBACtBC,MAAO,CAAC,aAAc,gBAUxB,IAAIC,IAAkBJ,EAAkB,IAAoBK,KAAU,WAAYL,EAAgBM,KAAW,aAAcN,EAAgBO,KAAY,aAAcP,EAAgBQ,KAAW,gBAAiBR,GAC7MS,EAAe,CACjBC,IAAI,EACJC,QAAS,IACTC,cAAc,EACdC,eAAe,EACfC,QAAQ,EACRC,UAAW,SACXC,kBAfF,SAA2BD,EAAWE,GACpC,IACIC,EAAQD,EADC,SAAWF,EAAU,GAAGI,cAAgBJ,EAAUK,MAAM,IAEjEC,EAAUpB,EAAQc,GACtB,OAAOG,EAAQI,SAASC,YAAIN,EAAMI,EAAQ,IAAK,IAAMC,SAASC,YAAIN,EAAMI,EAAQ,IAAK,MAcnFG,EAAwB,SAAUC,GAGpC,SAASD,IAGP,IAFA,IAAIE,EAEKC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GA8BzB,OA3BAN,EAAQD,EAAiBQ,KAAKC,MAAMT,EAAkB,CAACU,MAAMC,OAAON,KAAUK,MAExEE,YAAc,SAAUpB,GAC5BA,EAAKqB,MAAMZ,EAAMa,gBAAkB,KAGrCb,EAAMc,eAAiB,SAAUvB,GAC/B,IAAIF,EAAYW,EAAMa,eAEtBtB,EAAKqB,MAAMvB,GAAaW,EAAMe,yBAAyBxB,EAAMF,IAG/DW,EAAMgB,cAAgB,SAAUzB,GAC9BA,EAAKqB,MAAMZ,EAAMa,gBAAkB,MAGrCb,EAAMiB,WAAa,SAAU1B,GAC3B,IAAIF,EAAYW,EAAMa,eAEtBtB,EAAKqB,MAAMvB,GAAaW,EAAMkB,MAAM5B,kBAAkBD,EAAWE,GAAQ,KACzE4B,YAAqB5B,IAGvBS,EAAMoB,cAAgB,SAAU7B,GAC9BA,EAAKqB,MAAMZ,EAAMa,gBAAkB,MAG9Bb,EApCTqB,YAAevB,EAAUC,GAuCzB,IAAIuB,EAASxB,EAASyB,UAkDtB,OAhDAD,EAAOT,aAAe,WACpB,MAAuC,oBAAzBJ,KAAKS,MAAM7B,UAA2BoB,KAAKS,MAAM7B,YAAcoB,KAAKS,MAAM7B,WAM1FiC,EAAOP,yBAA2B,SAAkCxB,EAAMF,GAExE,OAAOE,EADM,SAAWF,EAAU,GAAGI,cAAgBJ,EAAUK,MAAM,IAC/C,MAGxB4B,EAAOE,OAAS,WACd,IAAIC,EAAShB,KAETiB,EAAcjB,KAAKS,MACnBS,EAAUD,EAAYC,QACtBC,EAAaF,EAAYE,WACzBC,EAAYH,EAAYG,UACxBC,EAASJ,EAAYI,OACrBC,EAAYL,EAAYK,UACxBC,EAAYN,EAAYM,UACxBC,EAAWP,EAAYO,SACvBf,EAAQgB,YAA8BR,EAAa,CAAC,UAAW,aAAc,YAAa,SAAU,YAAa,YAAa,oBAE3HR,EAAM7B,iBACN6B,EAAM5B,kBACb,IAAIqB,EAAcwB,YAAsB1B,KAAKE,YAAagB,GACtDb,EAAiBqB,YAAsB1B,KAAKK,eAAgBc,GAC5DZ,EAAgBmB,YAAsB1B,KAAKO,cAAea,GAC1DZ,EAAakB,YAAsB1B,KAAKQ,WAAYa,GACpDV,EAAgBe,YAAsB1B,KAAKW,cAAeW,GAC9D,OAAOK,IAAMC,cAAcC,IAAYC,YAAS,CAC9CC,eAAgBC,KACfvB,EAAO,CACR,gBAAiBA,EAAMwB,KAAOxB,EAAMlC,GAAK,KACzC2C,QAAShB,EACTiB,WAAYd,EACZe,UAAWb,EACXc,OAAQb,EACRc,UAAWX,KACT,SAAUuB,EAAOC,GACnB,OAAOR,IAAMS,aAAaZ,EAAUM,YAAS,GAAIK,EAAY,CAC3DZ,UAAWc,IAAWd,EAAWC,EAASf,MAAMc,UAAWtD,EAAeiE,GAAkC,UAA1BlB,EAAOZ,gBAA8B,gBAKtHf,EA1FmB,CA2F1BsC,IAAMW,WAERjD,EAASf,aAAeA,EACTe,Q,SC7HXkD,EAAoBZ,IAAMa,YAAW,SAAUC,EAAMC,GACvD,IAAIlB,EAAWiB,EAAKjB,SAChBmB,EAAWF,EAAKE,SAChBlC,EAAQgB,YAA8BgB,EAAM,CAAC,WAAY,aAEzDG,EAAkBC,qBAAWC,KACjC,OAAOnB,IAAMC,cAAcvC,EAAUyC,YAAS,CAC5CY,IAAKA,EACLnE,GAAIqE,IAAoBD,GACvBlC,GAAQkB,IAAMC,cAAc,MAAO,KAAMD,IAAMoB,SAASC,KAAKxB,QAElEe,EAAkBU,YAAc,oBACjBV,O,kGCqCAW,IA3Ca,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAO3B,EAA+B,EAA/BA,SAAU4B,EAAqB,EAArBA,KAAMT,EAAe,EAAfA,SAAe,EACnChB,IAAM0B,UAAS,GADoB,mBAC5DC,EAD4D,KAClDC,EADkD,KAGnE,OACE,kBAAC,IAAD,CAAMhC,UAAU,0BACd,kBAAC,IAAKiC,OAAN,CAAajC,UAAU,qDACrB,kBAAC,IAAD,CACEkC,GAAG,OACHd,SAAUA,EACVe,QAAS,kBAAMH,GAAaD,IAC5B/B,UAAU,kBAEV,yBAAKA,UAAU,gCACZ6B,GAAQ,uBAAG7B,UAAS,UAAK6B,EAAL,mBACpBD,IAGL,kBAAC,IAAD,CACEM,GAAG,OACHd,SAAUA,EACVe,QAAS,kBAAMH,GAAaD,IAC5B/B,UAAU,kBAEV,uBACEA,UAAWoC,YAAU,CACnB,wBAAwB,EACxB,gBAAiBL,EACjB,aAAcA,QAKtB,kBAAC,IAAD,CAAmBX,SAAUA,GAC3B,kBAAC,IAAKiB,KAAN,KAAYpC,O,kCC5CpB,yGAUIqC,EAAYlC,IAAMa,YAAW,SAAU/B,EAAOiC,GAChD,IAAIoB,EAAmBC,YAAgBtD,EAAO,CAC5CuD,UAAW,aAETC,EAAsBH,EAAiBL,GACvCnB,OAAoC,IAAxB2B,EAAiC,MAAQA,EACrDD,EAAYF,EAAiBE,UAC7BE,EAAWJ,EAAiBI,SAC5B1C,EAAWsC,EAAiBtC,SAC5BD,EAAYuC,EAAiBvC,UAC7B4C,EAAWL,EAAiBK,SAC5BC,EAAkB3C,YAA8BqC,EAAkB,CAAC,KAAM,YAAa,WAAY,WAAY,YAAa,aAG/H,OADAI,EAAWG,YAAmBH,EAAU,aACjCvC,IAAMC,cAAckB,IAAiBwB,SAAU,CACpDvF,MAAOiF,GACNrC,IAAMC,cAAc2C,IAAkBD,SAAU,CACjDvF,MAAOoF,GACNxC,IAAMC,cAAcU,EAAWR,YAAS,CACzCY,IAAKA,GACJ0B,EAAiB,CAClB7C,UAAWc,IAAWd,EAAW2C,KAC/B1C,QAENqC,EAAUW,OAASC,IACnBZ,EAAUxE,SAAWkD,IACNsB,O,oJC9BTa,E,4MACJxC,MAAQ,G,uDAEN,OACE,6BACE,kBAAC,IAAD,CACEyC,cAAe,CACb,CAAEC,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,mBAIZ,yBAAKrD,UAAU,QACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,2BAGA,uBAAGA,UAAU,mBAAb,kCAIA,kBAAC,IAAUiD,OAAX,CACE7B,SAAU,EACVc,GAAG,OACHlC,UAAU,qCAHZ,mBASF,kBAAC,IAAUlC,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,wKASR,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,wBAGA,uBAAGA,UAAU,mBAAb,uBACsB,qCADtB,YAIA,kBAAC,IAAUiD,OAAX,CACEf,GAAG,IACHd,SAAU,EACVpB,UAAU,uFAHZ,mBAQF,kBAAC,IAAUlC,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,wKAUR,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,4BAGA,uBAAGA,UAAU,mBAAb,qCAIA,kBAAC,IAAUiD,OAAX,CACEf,GAAG,IACHd,SAAU,EACVpB,UAAU,yCAEV,uBAAGA,UAAU,oCAGjB,kBAAC,IAAUlC,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,yKAWV,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,UACA,uBAAGA,UAAU,mBAAb,+BAGA,kBAAC,IAAUiD,OAAX,CAAkBf,GAAIqB,IAAQnC,SAAU,GAAxC,mBAIF,kBAAC,IAAUtD,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,wKASR,yBAAKA,UAAU,kBACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,UACA,uBAAGA,UAAU,mBAAb,+BAGA,kBAAC,IAAUiD,OAAX,CAAkBf,GAAIqB,IAAQnC,SAAU,GAAxC,mBAIF,kBAAC,IAAUtD,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,wKASR,yBAAKA,UAAU,kBACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,UACA,uBAAGA,UAAU,mBAAb,+BAGA,kBAAC,IAAUiD,OAAX,CAAkBf,GAAIqB,IAAQnC,SAAU,GAAxC,mBAIF,kBAAC,IAAUtD,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,yKAWV,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAWyC,UAAW,GACpB,yBAAKzC,UAAU,qCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,UACA,uBAAGA,UAAU,mBAAb,+BAGA,kBAAC,IAAUiD,OAAX,CAAkBf,GAAIqB,IAAQnC,SAAU,GAAxC,mBAIF,kBAAC,IAAUtD,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,wKASR,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAWyC,UAAW,GACpB,yBAAKzC,UAAU,qCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,UACA,uBAAGA,UAAU,mBAAb,+BAGA,kBAAC,IAAUiD,OAAX,CAAkBf,GAAIqB,IAAQnC,SAAU,GAAxC,mBAIF,kBAAC,IAAUtD,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,wKASR,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAWyC,UAAW,GACpB,yBAAKzC,UAAU,qCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBAAd,UACA,uBAAGA,UAAU,mBAAb,+BAGA,kBAAC,IAAUiD,OAAX,CAAkBf,GAAIqB,IAAQnC,SAAU,GAAxC,mBAIF,kBAAC,IAAUtD,SAAX,CAAoBsD,SAAU,GAC5B,yBAAKpB,UAAU,QAAf,yKAWV,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,OACV4B,MAAM,oBACN4B,SAAS,mCAER,CAAC,EAAG,EAAG,GAAGC,KAAI,SAAAC,GAAE,OACf,kBAAC,IAAD,CAAMC,IAAKD,EAAI1D,UAAU,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAKiC,OAAN,KACE,kBAAC,IAAUgB,OAAX,CACEjD,UAAU,mCACVkC,GAAG,OACHd,SAAU,GAHZ,qBAKqBsC,IAGvB,kBAAC,IAAU5F,SAAX,CAAoBsD,SAAU,GAC5B,kBAAC,IAAKiB,KAAN,iLAYZ,yBAAKrC,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,OACV4B,MAAM,oBACN4B,SAAS,+BAET,kBAAC,IAAD,KACG,CAAC,EAAG,EAAG,GAAGC,KAAI,SAAAC,GAAE,OACf,kBAAC,IAAD,CAAMC,IAAKD,EAAI1D,UAAU,aACvB,kBAAC,IAAKiC,OAAN,KACE,kBAAC,IAAUgB,OAAX,CACEjD,UAAU,mCACVkC,GAAG,OACHd,SAAUsC,EAAGE,YAHf,qBAKqBF,IAGvB,kBAAC,IAAU5F,SAAX,CAAoBsD,SAAUsC,EAAGE,YAC/B,kBAAC,IAAKvB,KAAN,kLAad,yBAAKrC,UAAU,YACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,OACV4B,MAAM,0BACN4B,SAAS,uBAER,CAAC,EAAG,EAAG,GAAGC,KAAI,SAAAC,GAAE,OACf,kBAAC,IAAD,CAAMC,IAAKD,EAAI1D,UAAU,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAKiC,OAAN,CAAajC,UAAU,qDACrB,kBAAC,IAAUiD,OAAX,CACEjD,UAAU,mCACVkC,GAAG,OACHd,SAAUsC,EAAGE,YAHf,qBAKqBF,GAErB,yBAAK1D,UAAU,UACb,uBAAGA,UAAU,iBAAb,KACA,uBAAGA,UAAU,eAAb,KACA,uBAAGA,UAAU,yBACb,uBAAGA,UAAU,0BAGjB,kBAAC,IAAUlC,SAAX,CAAoBsD,SAAUsC,EAAGE,YAC/B,kBAAC,IAAKvB,KAAN,iLAYZ,yBAAKrC,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,OACV4B,MAAM,oBACN4B,SAAS,uBAER,CAAC,EAAG,EAAG,GAAGC,KAAI,SAAAC,GAAE,OACf,kBAAC,IAAD,CAAWC,IAAKD,EAAI1D,UAAU,QAC5B,kBAAC,IAAD,CACE4B,MAAK,2BAAsB8B,GAC3BtC,SAAUsC,EAAGE,YAFf,2KAcV,yBAAK5D,UAAU,YACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,OACV4B,MAAM,qBACN4B,SAAS,gCAET,kBAAC,IAAD,CAAWK,iBAAkB,GAC3B,kBAAC,IAAUZ,OAAX,CACEf,GAAI4B,IAAK7B,OACTb,SAAU,EACVpB,UAAU,kBAHZ,8BAOA,kBAAC,IAAUlC,SAAX,CAAoBsD,SAAU,GAC5B,kBAAC,IAAKiB,KAAN,KACG,CAAC,EAAG,EAAG,GAAGoB,KAAI,SAAAC,GAAE,OACf,kBAAC,IAAD,CAAWC,IAAKD,EAAI1D,UAAU,QAC5B,kBAAC,IAAUiD,OAAX,CACEf,GAAI4B,IAAK7B,OACTb,SAAUsC,EAAGE,WACb5D,UAAU,kBAHZ,sBAKsB0D,GAEtB,kBAAC,IAAU5F,SAAX,CAAoBsD,SAAUsC,EAAGE,YAC/B,kBAAC,IAAKvB,KAAN,mLAehB,yBAAKrC,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,OACV4B,MAAM,qBACN4B,SAAS,4CAER,CAAC,SAAU,UAAW,WAAWC,KAAI,SAACM,EAAOL,GAAR,OACpC,kBAAC,IAAD,CAAWC,IAAKD,EAAI1D,UAAU,QAC5B,kBAAC,IAAUiD,OAAX,CACEf,GAAI4B,IAAK7B,OACTb,SAAUsC,EAAGE,WACb5D,UAAS,uCAAkC+D,IAH7C,qBAKqBL,EAAK,GAE1B,kBAAC,IAAU5F,SAAX,CAAoBsD,SAAUsC,EAAGE,YAC/B,kBAAC,IAAKvB,KAAN,uL,GAzaOtB,aA0bdoC,a,iCChcf,6CACIH,EADJ,OACwB5C,EAAM4D,gBACnBC,EAAe,SAAsB7C,EAAU8C,GACxD,OAAgB,MAAZ9C,EAAyB+C,OAAO/C,GAC7B8C,GAAQ,MAEFlB,O,iCCNf,oEAYIO,EAASnD,IAAMa,YAAW,SAAUC,EAAMC,GAC5C,IAAIwB,EAAWzB,EAAKyB,SAChByB,EAAUlD,EAAKkD,QACfC,EAAOnD,EAAKmD,KACZC,EAASpD,EAAKoD,OACdtE,EAAYkB,EAAKlB,UACjBuE,EAAQrD,EAAKqD,MACbC,EAAOtD,EAAKsD,KACZtC,EAAKhB,EAAKgB,GACVhD,EAAQgB,YAA8BgB,EAAM,CAAC,WAAY,UAAW,OAAQ,SAAU,YAAa,QAAS,OAAQ,OAEpHuD,EAAS3B,YAAmBH,EAAU,OACtC+B,EAAU5D,IAAWd,EAAWyE,EAAQH,GAAU,SAAUG,EAAS,IAAML,EAASG,GAASE,EAAS,SAAUJ,GAAQI,EAAS,IAAMJ,GAE3I,GAAInF,EAAMgF,KACR,OAAO9D,IAAMC,cAAcsE,IAAYpE,YAAS,GAAIrB,EAAO,CACzDgD,GAAIA,EACJf,IAAKA,EACLnB,UAAWc,IAAW4D,EAASxF,EAAM0F,UAAY,eAIjDzD,IACFjC,EAAMiC,IAAMA,GAGTe,IACHhD,EAAMsF,KAAOA,GAGf,IAAIzD,EAAYmB,GAAM,SACtB,OAAO9B,IAAMC,cAAcU,EAAWR,YAAS,GAAIrB,EAAO,CACxDc,UAAW0E,QAGfnB,EAAO7B,YAAc,SACrB6B,EAAOxG,aA1CY,CACjBqH,QAAS,UACTE,QAAQ,EACRM,UAAU,EACVJ,KAAM,UAuCOjB,O,iCCjDf,oBACenD,QAAM4D,cAAc,O,iCCDnC,qDAkBA,IAAId,EAAkB9C,IAAMa,YAAW,SAAUC,EAAMC,GACrD,IAAI0D,EAAU3D,EAAKgB,GACfnB,OAAwB,IAAZ8D,EAAqB,SAAWA,EAC5C5E,EAAWiB,EAAKjB,SAChBmB,EAAWF,EAAKE,SAChBe,EAAUjB,EAAKiB,QACfjD,EAAQgB,YAA8BgB,EAAM,CAAC,KAAM,WAAY,WAAY,YAE3E4D,EArBC,SAA4B1D,EAAUe,GAC3C,IAAId,EAAkBC,qBAAWC,KAC7BqB,EAAWtB,qBAAW0B,KAC1B,OAAO,SAAU+B,GAMfnC,EADqBxB,IAAaC,EAAkB,KAAOD,EAClC2D,GACrB5C,GAASA,EAAQ4C,IAWAC,CAAmB5D,EAAUe,GACpD,OAAO/B,IAAMC,cAAcU,EAAWR,YAAS,CAC7CY,IAAKA,EACLgB,QAAS2C,GACR5F,GAAQe,MAEEiD","file":"static/js/52.8cc30ca0.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _collapseStyles;\n\nimport classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport React from 'react';\nimport Transition, { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDimensionValue(dimension, elem) {\n  var offset = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n  var value = elem[offset];\n  var margins = MARGINS[dimension];\n  return value + parseInt(css(elem, margins[0]), 10) + parseInt(css(elem, margins[1]), 10);\n}\n\nvar collapseStyles = (_collapseStyles = {}, _collapseStyles[EXITED] = 'collapse', _collapseStyles[EXITING] = 'collapsing', _collapseStyles[ENTERING] = 'collapsing', _collapseStyles[ENTERED] = 'collapse show', _collapseStyles);\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  dimension: 'height',\n  getDimensionValue: getDimensionValue\n};\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Collapse, _React$Component);\n\n  function Collapse() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleEnter = function (elem) {\n      elem.style[_this.getDimension()] = '0';\n    };\n\n    _this.handleEntering = function (elem) {\n      var dimension = _this.getDimension();\n\n      elem.style[dimension] = _this._getScrollDimensionValue(elem, dimension);\n    };\n\n    _this.handleEntered = function (elem) {\n      elem.style[_this.getDimension()] = null;\n    };\n\n    _this.handleExit = function (elem) {\n      var dimension = _this.getDimension();\n\n      elem.style[dimension] = _this.props.getDimensionValue(dimension, elem) + \"px\";\n      triggerBrowserReflow(elem);\n    };\n\n    _this.handleExiting = function (elem) {\n      elem.style[_this.getDimension()] = null;\n    };\n\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.getDimension = function getDimension() {\n    return typeof this.props.dimension === 'function' ? this.props.dimension() : this.props.dimension;\n  }\n  /* -- Expanding -- */\n  ;\n\n  // for testing\n  _proto._getScrollDimensionValue = function _getScrollDimensionValue(elem, dimension) {\n    var scroll = \"scroll\" + dimension[0].toUpperCase() + dimension.slice(1);\n    return elem[scroll] + \"px\";\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        onEnter = _this$props.onEnter,\n        onEntering = _this$props.onEntering,\n        onEntered = _this$props.onEntered,\n        onExit = _this$props.onExit,\n        onExiting = _this$props.onExiting,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"className\", \"children\"]);\n\n    delete props.dimension;\n    delete props.getDimensionValue;\n    var handleEnter = createChainedFunction(this.handleEnter, onEnter);\n    var handleEntering = createChainedFunction(this.handleEntering, onEntering);\n    var handleEntered = createChainedFunction(this.handleEntered, onEntered);\n    var handleExit = createChainedFunction(this.handleExit, onExit);\n    var handleExiting = createChainedFunction(this.handleExiting, onExiting);\n    return React.createElement(Transition, _extends({\n      addEndListener: transitionEnd\n    }, props, {\n      \"aria-expanded\": props.role ? props.in : null,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: handleEntered,\n      onExit: handleExit,\n      onExiting: handleExiting\n    }), function (state, innerProps) {\n      return React.cloneElement(children, _extends({}, innerProps, {\n        className: classNames(className, children.props.className, collapseStyles[state], _this2.getDimension() === 'width' && 'width')\n      }));\n    });\n  };\n\n  return Collapse;\n}(React.Component);\n\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nvar AccordionCollapse = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext);\n  return React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), React.createElement(\"div\", null, React.Children.only(children)));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import React from \"react\";\nimport {\n  Card,\n  Accordion,\n  AccordionToggle,\n  AccordionCollapse,\n  Button\n} from \"react-bootstrap\";\nimport { classList } from \"@utils\";\nimport PropTypes from \"prop-types\";\n\nconst RightArrowAccordion = ({ title, children, icon, eventKey }) => {\n  const [openItem, setOpenItem] = React.useState(false);\n\n  return (\n    <Card className=\"ul-card__border-radius\">\n      <Card.Header className=\"d-flex align-items-center justify-content-between\">\n        <AccordionToggle\n          as=\"span\"\n          eventKey={eventKey}\n          onClick={() => setOpenItem(!openItem)}\n          className=\"cursor-pointer\"\n        >\n          <div className=\"card-title mb-0 text-primary\">\n            {icon && <i className={`${icon} mr-2 text-15`}></i>}\n            {title}\n          </div>\n        </AccordionToggle>\n        <AccordionToggle\n          as=\"span\"\n          eventKey={eventKey}\n          onClick={() => setOpenItem(!openItem)}\n          className=\"cursor-pointer\"\n        >\n          <i\n            className={classList({\n              \"text-primary text-16\": true,\n              \"i-Arrow-Down\": !openItem,\n              \"i-Arrow-Up\": openItem\n            })}\n          ></i>\n        </AccordionToggle>\n      </Card.Header>\n      <AccordionCollapse eventKey={eventKey}>\n        <Card.Body>{children}</Card.Body>\n      </AccordionCollapse>\n    </Card>\n  );\n};\n\nRightArrowAccordion.propTypes = {\n  eventKey: PropTypes.string.isRequired\n};\n\nexport default RightArrowAccordion;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  return React.createElement(AccordionContext.Provider, {\n    value: activeKey\n  }, React.createElement(SelectableContext.Provider, {\n    value: onSelect\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix)\n  }), children)));\n});\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Accordion, Button, Card } from \"react-bootstrap\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport RightArrowAccordion from \"@gull/components/accordions/RightArrowAccordion\";\n\nclass AppCollapsible extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Collapsibles\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"mb-3\">\n          <div className=\"row\">\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion>\n                <div className=\"card card-body ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">\n                      Inline or block element\n                    </h5>\n                    <p className=\"mb-3 text-muted\">\n                      Example of inline text toggler\n                    </p>\n\n                    <Accordion.Toggle\n                      eventKey={0}\n                      as=\"span\"\n                      className=\"t-font-boldest ul-cursor--pointer\"\n                    >\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n\n                  <Accordion.Collapse eventKey={0}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion>\n                <div className=\"card card-body ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">\n                      Text and other links\n                    </h5>\n                    <p className=\"mb-3 text-muted\">\n                      Example of a simple <code>&lt;a&gt;</code> element\n                    </p>\n\n                    <Accordion.Toggle\n                      as=\"a\"\n                      eventKey={1}\n                      className=\"font-weight-semibold collapsed typo_link text-primary t-font-boldest cursor-pointer\"\n                    >\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={1}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion>\n                <div className=\"card card-body ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">\n                      Single or multiple icons\n                    </h5>\n                    <p className=\"mb-3 text-muted\">\n                      Icons in block or inline elements\n                    </p>\n\n                    <Accordion.Toggle\n                      as=\"a\"\n                      eventKey={2}\n                      className=\"text-default collapsed cursor-pointer\"\n                    >\n                      <i className=\"i-Arrow-Down-2 t-font-boldest\"></i>\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={2}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Control toggle with buttons\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={3}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={3}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4  mb-3\">\n              <Accordion>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Control toggle with buttons\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={4}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={4}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4  mb-3\">\n              <Accordion>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Control toggle with buttons\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={4}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={4}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion activeKey={3}>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Expanded content by default\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={3}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={3}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4  mb-3\">\n              <Accordion activeKey={4}>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Expanded content by default\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={4}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={4}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4  mb-3\">\n              <Accordion activeKey={4}>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Expanded content by default\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={4}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={4}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n          </div>\n\n          <div className=\"row mt-5\">\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Basic collapsible\"\n                subtitle=\"Basic collapsible functionality\"\n              >\n                {[1, 2, 3].map(id => (\n                  <Card key={id} className=\"mb-3 shadow-sm\">\n                    <Accordion>\n                      <Card.Header>\n                        <Accordion.Toggle\n                          className=\"cursor-pointer mb-0 text-primary\"\n                          as=\"span\"\n                          eventKey={4}\n                        >\n                          Collapsible Item #{id}\n                        </Accordion.Toggle>\n                      </Card.Header>\n                      <Accordion.Collapse eventKey={4}>\n                        <Card.Body>\n                          Anim pariatur cliche reprehenderit, enim eiusmod high\n                          life accusamus terry richardson ad squid. 3 wolf moon\n                          officia aute, non cupidatat skateboard dolor brunch.\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Accordion>\n                  </Card>\n                ))}\n              </SimpleCard>\n            </div>\n\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Collapsible Group\"\n                subtitle=\"Display cards as card group\"\n              >\n                <Accordion>\n                  {[1, 2, 3].map(id => (\n                    <Card key={id} className=\"shadow-sm\">\n                      <Card.Header>\n                        <Accordion.Toggle\n                          className=\"cursor-pointer mb-0 text-primary\"\n                          as=\"span\"\n                          eventKey={id.toString()}\n                        >\n                          Collapsible Item #{id}\n                        </Accordion.Toggle>\n                      </Card.Header>\n                      <Accordion.Collapse eventKey={id.toString()}>\n                        <Card.Body>\n                          Anim pariatur cliche reprehenderit, enim eiusmod high\n                          life accusamus terry richardson ad squid. 3 wolf moon\n                          officia aute, non cupidatat skateboard dolor brunch.\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Card>\n                  ))}\n                </Accordion>\n              </SimpleCard>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Accordion With Controls\"\n                subtitle=\"Using card controls\"\n              >\n                {[1, 2, 3].map(id => (\n                  <Card key={id} className=\"shadow-sm mb-3\">\n                    <Accordion>\n                      <Card.Header className=\"d-flex align-items-center justify-content-between\">\n                        <Accordion.Toggle\n                          className=\"cursor-pointer mb-0 text-primary\"\n                          as=\"span\"\n                          eventKey={id.toString()}\n                        >\n                          Collapsible Item #{id}\n                        </Accordion.Toggle>\n                        <div className=\"d-flex\">\n                          <i className=\"mx-1 i-Reload\"> </i>\n                          <i className=\"mx-1 i-Drag\"> </i>\n                          <i className=\"mx-1 i-Full-Screen-2\"></i>\n                          <i className=\"mx-1 i-Close-Window\"></i>\n                        </div>\n                      </Card.Header>\n                      <Accordion.Collapse eventKey={id.toString()}>\n                        <Card.Body>\n                          Anim pariatur cliche reprehenderit, enim eiusmod high\n                          life accusamus terry richardson ad squid. 3 wolf moon\n                          officia aute, non cupidatat skateboard dolor brunch.\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Accordion>\n                  </Card>\n                ))}\n              </SimpleCard>\n            </div>\n\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Left control icon\"\n                subtitle=\"Using left controls\"\n              >\n                {[1, 2, 3].map(id => (\n                  <Accordion key={id} className=\"mb-3\">\n                    <RightArrowAccordion\n                      title={`Collapsible item ${id}`}\n                      eventKey={id.toString()}\n                    >\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </RightArrowAccordion>\n                  </Accordion>\n                ))}\n              </SimpleCard>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Nested Collapsible\"\n                subtitle=\"Multiple collapsibles levels\"\n              >\n                <Accordion defaultActiveKey={1}>\n                  <Accordion.Toggle\n                    as={Card.Header}\n                    eventKey={1}\n                    className=\"cursor-pointer\"\n                  >\n                    Parent Collapsible Item #1\n                  </Accordion.Toggle>\n                  <Accordion.Collapse eventKey={1}>\n                    <Card.Body>\n                      {[1, 2, 3].map(id => (\n                        <Accordion key={id} className=\"mb-3\">\n                          <Accordion.Toggle\n                            as={Card.Header}\n                            eventKey={id.toString()}\n                            className=\"cursor-pointer\"\n                          >\n                            Collapsible Child #{id}\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey={id.toString()}>\n                            <Card.Body>\n                              Anim pariatur cliche reprehenderit, enim eiusmod\n                              high life accusamus terry richardson ad squid. 3\n                              wolf moon officia aute, non cupidatat skateboard\n                              dolor brunch.\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Accordion>\n                      ))}\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Accordion>\n              </SimpleCard>\n            </div>\n\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Styled Collapsible\"\n                subtitle=\"Collapsible with different color heading\"\n              >\n                {[\"danger\", \"success\", \"primary\"].map((color, id) => (\n                  <Accordion key={id} className=\"mb-3\">\n                    <Accordion.Toggle\n                      as={Card.Header}\n                      eventKey={id.toString()}\n                      className={`cursor-pointer text-white bg-${color}`}\n                    >\n                      Collapsible Item #{id + 1}\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={id.toString()}>\n                      <Card.Body>\n                        Anim pariatur cliche reprehenderit, enim eiusmod high\n                        life accusamus terry richardson ad squid. 3 wolf moon\n                        officia aute, non cupidatat skateboard dolor brunch.\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Accordion>\n                ))}\n              </SimpleCard>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppCollapsible;\n","import React from 'react';\nvar SelectableContext = React.createContext();\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (!as) {\n    props.type = type;\n  }\n\n  var Component = as || 'button';\n  return React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /* \n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;"],"sourceRoot":""}