{"version":3,"sources":["app/views/forms/LayoutForm.jsx","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js"],"names":["LayoutForm","state","routeSegments","name","path","className","type","placeholder","htmlFor","id","value","disabled","Toggle","Menu","style","width","Component","SelectableContext","React","createContext","makeEventKey","eventKey","href","String","NavContext","Button","forwardRef","_ref","ref","bsPrefix","variant","size","active","block","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","createElement","SafeAnchor","_extends","displayName","defaultProps","DropdownContext","menuRef","toggleRef","onToggle","toggleNode","undefined","alignEnd","show","drop","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","useForceUpdate","useReducer","useDropdownMenu","options","_modifiers$arrow","context","useContext","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","flip","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","usePopper","shouldUsePopper","current","handleClose","e","toggle","setMenu","menuElement","toggleElement","placement","modifiers","toModifierMap","popper","enabled","eventListeners","arrow","menu","menuProps","childArgs","hasShown","close","styles","arrowProps","arrowStyles","useRootClose","clickTrigger","propTypes","children","PropTypes","func","isRequired","bool","oneOf","object","string","DropdownMenu","args","useDropdownToggle","_useContext","setToggle","DropdownToggle","_useDropdownToggle","_useDropdownToggle$","useWrappedRefWithWarning","componentName","split","childBsPrefix","_ref$as","toggleProps","useMergedRefs","onClick","alignRight","showProps","isNavbar","NavbarContext","_useDropdownMenu","matchesImpl","focusFirstItemOnShow","itemSelector","defaultShow","Dropdown","rawShow","rawOnToggle","forceUpdate","_useUncontrolled","useUncontrolled","useCallback","lastShow","useEffect","usePrevious","lastSourceEvent","focusInDropdown","event","useMemo","contains","document","activeElement","focusToggle","useEventCallback","focus","maybeFocusFirst","focusType","node","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","test","first","getNextFocusedChild","offset","items","index","indexOf","Math","max","min","length","Provider","onKeyDown","key","target","tagName","next","preventDefault","_next","DropdownItem","onSelect","propActive","onSelectCtx","activeKey","handleClick","uncontrolledProps","_useUncontrolled$as","navbar","handleToggle","nextShow","source","currentTarget","handleSelect","BaseDropdown","dropdownProps","Item","Header","createWithBsPrefix","role","Divider"],"mappings":"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","file":"static/js/46.eea191ce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Dropdown } from \"react-bootstrap\";\n\nclass LayoutForm extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Forms\", path: \"/forms\" },\n            { name: \"Layout Form\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12\">\n            <h4>Horizontal Layout</h4>\n            <p>\n              A form control layout using row to create horizontal alignment.\n            </p>\n            <div className=\"card mb-5\">\n              <div className=\"card-body\">\n                <div className=\"row row-xs\">\n                  <div className=\"col-md-5\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter your username\"\n                    />\n                  </div>\n                  <div className=\"col-md-5 mt-3 mt-md-0\">\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      placeholder=\"Enter your password\"\n                    />\n                  </div>\n                  <div className=\"col-md-2 mt-3 mt-md-0\">\n                    <button className=\"btn btn-primary btn-block\">\n                      Sign In\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"border-top mb-5\"></div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h4>Verticle Layout</h4>\n            <p>\n              A form control layout using flex to create verticle alignment.\n            </p>\n            <div className=\"card mb-5\">\n              <div className=\"card-body\">\n                <div className=\"d-flex flex-column\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter your username\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      placeholder=\"Enter your password\"\n                    />\n                  </div>\n                  <button className=\"btn btn-primary pd-x-20\">Sign In</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"border-top mb-5\"></div>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h4>Left Label Alignment</h4>\n            <p>A form control layout using row with left label alignment.</p>\n            <div className=\"card mb-5\">\n              <div className=\"card-body\">\n                <form>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"inputEmail3\"\n                      className=\"col-sm-2 col-form-label\"\n                    >\n                      Email\n                    </label>\n                    <div className=\"col-sm-10\">\n                      <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        id=\"inputEmail3\"\n                        placeholder=\"Email\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label\n                      htmlFor=\"inputPassword3\"\n                      className=\"col-sm-2 col-form-label\"\n                    >\n                      Password\n                    </label>\n                    <div className=\"col-sm-10\">\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        id=\"inputPassword3\"\n                        placeholder=\"Password\"\n                      />\n                    </div>\n                  </div>\n                  <fieldset className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-form-label col-sm-2 pt-0\">Radios</div>\n                      <div className=\"col-sm-10\">\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"gridRadios\"\n                            id=\"gridRadios1\"\n                            value=\"option1\"\n                          />\n                          <label\n                            className=\"form-check-label ml-3\"\n                            htmlFor=\"gridRadios1\"\n                          >\n                            First radio\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"gridRadios\"\n                            id=\"gridRadios2\"\n                            value=\"option2\"\n                          />\n                          <label\n                            className=\"form-check-label ml-3\"\n                            htmlFor=\"gridRadios2\"\n                          >\n                            Second radio\n                          </label>\n                        </div>\n                        <div className=\"form-check disabled \">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"gridRadios\"\n                            id=\"gridRadios3\"\n                            value=\"option3\"\n                            disabled\n                          />\n                          <label\n                            className=\"form-check-label ml-3\"\n                            htmlFor=\"gridRadios3\"\n                          >\n                            Third disabled radio\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </fieldset>\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-2\">Checkbox</div>\n                    <div className=\"col-sm-10\">\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          id=\"gridCheck1\"\n                        />\n                        <label\n                          className=\"form-check-label ml-3\"\n                          htmlFor=\"gridCheck1\"\n                        >\n                          Example checkbox\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-10\">\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Sign in\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"border-top mb-5\"></div>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h4>Form Inside Dropdown</h4>\n            <p>A form group layout inside dropdown</p>\n            <div className=\"btn-group\">\n              <Dropdown>\n                <Dropdown.Toggle>Download File</Dropdown.Toggle>\n                <Dropdown.Menu\n                  className=\"dropdown-menu bg-transparent shadow-none p-0 m-0\"\n                  style={{ width: \"320px\" }}\n                >\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <div className=\"card-title mb-1\">\n                        Please Sign In First\n                      </div>\n                      <p>Lorem ipsum dolor sit amet.</p>\n                      <div className=\"d-flex flex-column\">\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Enter your username\"\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Enter your password\"\n                          />\n                        </div>\n                        <button className=\"btn btn-primary pd-x-20\">\n                          Sign In\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LayoutForm;\n","import React from 'react';\nvar SelectableContext = React.createContext();\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react';\nvar NavContext = React.createContext(null);\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (!as) {\n    props.type = type;\n  }\n\n  var Component = as || 'button';\n  return React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from 'react';\nvar DropdownContext = React.createContext({\n  menuRef: function menuRef() {},\n  toggleRef: function toggleRef() {},\n  onToggle: function onToggle() {},\n  toggleNode: undefined,\n  alignEnd: null,\n  show: null,\n  drop: null\n});\nexport default DropdownContext;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\nexport function useDropdownMenu(options) {\n  var _modifiers$arrow;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? true : _options$usePopper;\n  var show = context.show == null ? options.show : context.show;\n  var alignEnd = context.alignEnd == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    if (!context.toggle) return;\n    context.toggle(false, e);\n  };\n\n  var drop = context.drop,\n      setMenu = context.setMenu,\n      menuElement = context.menuElement,\n      toggleElement = context.toggleElement;\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var modifiers = toModifierMap(popperConfig.modifiers);\n  var popper = usePopper(toggleElement, menuElement, _extends({}, popperConfig, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!show\n      },\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  }));\n  var menu = null;\n  var menuProps = {\n    ref: setMenu,\n    'aria-labelledby': toggleElement && toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\nfunction DropdownMenu(_ref) {\n  var children = _ref.children,\n      options = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return args.hasShown ? children(args) : null;\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n/**\n * Wires up Dropdown toggle functinality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n */\n\nexport function useDropdownToggle() {\n  var _useContext = useContext(DropdownContext),\n      show = _useContext.show,\n      toggle = _useContext.toggle,\n      setToggle = _useContext.setToggle;\n\n  return [{\n    ref: setToggle,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\nfunction DropdownToggle(_ref) {\n  var children = _ref.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      _useDropdownToggle$ = _useDropdownToggle[1],\n      show = _useDropdownToggle$.show,\n      toggle = _useDropdownToggle$.toggle;\n\n  return children({\n    show: show,\n    toggle: toggle,\n    props: props\n  });\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar\n  }),\n      hasShown = _useDropdownMenu.hasShown,\n      placement = _useDropdownMenu.placement,\n      show = _useDropdownMenu.show,\n      alignEnd = _useDropdownMenu.alignEnd,\n      close = _useDropdownMenu.close,\n      menuProps = _useDropdownMenu.props;\n\n  menuProps.ref = useMergedRefs(menuProps.ref, useWrappedRefWithWarning(ref, 'DropdownMenu'));\n  if (!hasShown) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = close;\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, style, {}, menuProps.style);\n    props['x-placement'] = placement;\n  }\n\n  return React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","var matchesImpl;\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolled } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string.isRequired,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```js\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\nvar defaultProps = {\n  itemSelector: '* > *'\n};\n/**\n * `Dropdown` is set of structural components for building, accessible dropdown menus with close-on-click,\n * keyboard navigation, and correct focus handling. As with all the react-overlay's\n * components its BYOS (bring your own styles). Dropdown is primarily\n * built from three base components, you should compose to build your Dropdowns.\n *\n * - `Dropdown`, which wraps the menu and toggle, and handles keyboard navigation\n * - `Dropdown.Toggle` generally a button that triggers the menu opening\n * - `Dropdown.Menu` The overlaid, menu, positioned to the toggle with PopperJs\n */\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      itemSelector = _ref.itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n  var forceUpdate = useForceUpdate();\n\n  var _useUncontrolled = useUncontrolled({\n    defaultShow: defaultShow,\n    show: rawShow,\n    onToggle: rawOnToggle\n  }, {\n    show: 'onToggle'\n  }),\n      show = _useUncontrolled.show,\n      onToggle = _useUncontrolled.onToggle;\n\n  var _useCallbackRef = useCallbackRef(),\n      toggleElement = _useCallbackRef[0],\n      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var menuRef = useRef();\n  var menuElement = menuRef.current;\n  var setMenu = useCallback(function (ref) {\n    menuRef.current = ref; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (event) {\n    onToggle(!show, event);\n  }, [onToggle, show]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var key = event.key,\n        target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          toggle(event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Escape':\n      case 'Tab':\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  };\n\n  return React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children({\n    props: {\n      onKeyDown: handleKeyDown\n    }\n  }));\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.defaultProps = defaultProps;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SafeAnchor from './SafeAnchor';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    href: href,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n    onClick: handleClick\n  }), children);\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"]);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document) source = 'rootClose';\n    onToggle(nextShow, event, {\n      source: source\n    });\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, function (_ref) {\n    var dropdownProps = _ref.props;\n    return React.createElement(Component, _extends({}, props, dropdownProps, {\n      ref: ref,\n      className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n    }));\n  }));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Toggle = DropdownToggle;\nDropdown.Menu = DropdownMenu;\nDropdown.Item = DropdownItem;\nDropdown.Header = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nDropdown.Divider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nexport default Dropdown;"],"sourceRoot":""}