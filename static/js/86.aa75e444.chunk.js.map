{"version":3,"sources":["app/views/extra-kits/AppToastr.jsx","../node_modules/react-bootstrap/esm/Button.js"],"names":["AppToastr","state","routeSegments","name","path","className","variant","onClick","NotificationManager","success","info","warning","error","Component","Button","React","forwardRef","_ref","ref","bsPrefix","size","active","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","displayName","defaultProps"],"mappings":"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","file":"static/js/86.aa75e444.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Button } from \"react-bootstrap\";\nimport {\n  NotificationContainer,\n  NotificationManager\n} from \"react-notifications\";\n\nclass AppToastr extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Home\", path: \"/\" },\n            { name: \"Extra Kits\", path: \"/extra-kits\" },\n            { name: \"Toastr\" }\n          ]}\n        ></Breadcrumb>\n        <h3 className=\"card-title\">Types</h3>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-success\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.success(\n                      \"success message\",\n                      \"Success Title\"\n                    );\n                  }}\n                >\n                  success toaster\n                </Button>\n                <Button\n                  variant=\"outline-info\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.info(\"info message\", \"Info Title\");\n                  }}\n                >\n                  info toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-warning\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.warning(\n                      \"warning message\",\n                      \"warning Title\"\n                    );\n                  }}\n                >\n                  warning toaster\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.error(\"danger message\", \"danger Title\");\n                  }}\n                >\n                  danger toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <h3 className=\"card-title\">Toastr with timeout</h3>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-success\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.success(\n                      \"success message\",\n                      \"Success Title\",\n                      10000\n                    );\n                  }}\n                >\n                  success toaster\n                </Button>\n                <Button\n                  variant=\"outline-info\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.info(\n                      \"info message\",\n                      \"Info Title\",\n                      10000\n                    );\n                  }}\n                >\n                  info toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-warning\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.warning(\n                      \"warning message\",\n                      \"warning Title\",\n                      10000\n                    );\n                  }}\n                >\n                  warning toaster\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.error(\n                      \"danger message\",\n                      \"danger Title\",\n                      10000\n                    );\n                  }}\n                >\n                  danger toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <h3 className=\"card-title\">Toastr with priority</h3>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-success\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.success(\n                      \"success message\",\n                      \"Success Title\",\n                      5000,\n                      () => {},\n                      4\n                    );\n                  }}\n                >\n                  success toaster\n                </Button>\n                <Button\n                  variant=\"outline-info\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.info(\n                      \"info message\",\n                      \"Info Title\",\n                      5000,\n                      () => {},\n                      3\n                    );\n                  }}\n                >\n                  info toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-warning\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.warning(\n                      \"warning message\",\n                      \"warning Title\",\n                      5000,\n                      () => {},\n                      2\n                    );\n                  }}\n                >\n                  warning toaster\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.error(\n                      \"danger message\",\n                      \"danger Title\",\n                      5000,\n                      () => {},\n                      1\n                    );\n                  }}\n                >\n                  danger toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nexport default AppToastr;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (!as) {\n    props.type = type;\n  }\n\n  var Component = as || 'button';\n  return React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}