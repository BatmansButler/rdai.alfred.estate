{"version":3,"sources":["app/views/ui-kits/alerts/SimpleAlert.jsx","app/views/ui-kits/alerts/SuccessAlert.jsx","app/views/ui-kits/alerts/DangerAlert.jsx","app/views/ui-kits/alerts/AppAlert.jsx","../node_modules/react-bootstrap/esm/Button.js"],"names":["SimpleAlert","state","variantList","showCustomAlert","handleClose","index","filter","item","i","setState","closeCustomAlert","this","Alert","className","variant","dismissible","onClose","Button","map","idx","key","Component","SuccessAlert","useState","show","setShow","Heading","onClick","DangerAlert","React","showAlert","setShowAlert","AppAlert","routeSegments","name","path","forwardRef","_ref","ref","bsPrefix","size","active","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","displayName","defaultProps"],"mappings":"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","file":"static/js/90.56503937.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\n\nclass SimpleAlert extends Component {\n  state = {\n    variantList: [\n      \"primary\",\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ],\n    showCustomAlert: true\n  };\n\n  handleClose = index => {\n    let variantList = this.state.variantList.filter((item, i) => i !== index);\n    this.setState({ variantList });\n  };\n\n  closeCustomAlert = () => {\n    this.setState({ showCustomAlert: false });\n  };\n\n  render() {\n    let { variantList, showCustomAlert } = this.state;\n\n    return (\n      <Fragment>\n        {showCustomAlert && (\n          <Alert\n            className=\"text-center alert-card\"\n            variant=\"warning\"\n            dismissible\n            onClose={this.closeCustomAlert}\n          >\n            Gull makes developent life easier!\n            <Button variant=\"warning\" className=\"btn-rounded ml-3\">\n              Buy Now\n            </Button>\n          </Alert>\n        )}\n        {variantList.map((variant, idx) => (\n          <Alert\n            key={idx}\n            variant={variant}\n            dismissible\n            onClose={() => this.handleClose(idx)}\n          >\n            This is a {variant} alertâ€”check it out!\n          </Alert>\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nexport default SimpleAlert;\n","import React, { useState } from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\n\nconst SuccessAlert = () => {\n  const [show, setShow] = useState(true);\n\n  return (\n    <>\n      <Alert show={show} variant=\"success\">\n        <Alert.Heading>How's it going?!</Alert.Heading>\n        <p>\n          Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget\n          lacinia odio sem nec elit. Cras mattis consectetur purus sit amet\n          fermentum.\n        </p>\n        <hr className=\"my-3\" />\n        <div className=\"d-flex justify-content-end\">\n          <Button onClick={() => setShow(false)} variant=\"outline-success\">\n            Close me ya'll!\n          </Button>\n        </div>\n      </Alert>\n\n      {!show && <Button onClick={() => setShow(true)}>Show Alert</Button>}\n    </>\n  );\n};\n\nexport default SuccessAlert;\n","import React, { Fragment } from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\n\nconst DangerAlert = () => {\n  const [showAlert, setShowAlert] = React.useState(true);\n\n  return (\n    <Fragment>\n      {showAlert && (\n        <Alert variant=\"danger\" dismissible onClose={() => setShowAlert(false)}>\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n          <p>\n            Change this and that and try again. Duis mollis, est non commodo\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\n            Cras mattis consectetur purus sit amet fermentum.\n          </p>\n        </Alert>\n      )}\n      {!showAlert && (\n        <Button variant=\"success\" onClick={() => setShowAlert(true)}>\n          Show Alert\n        </Button>\n      )}\n    </Fragment>\n  );\n};\n\nexport default DangerAlert;\n","import React, { Component } from \"react\";\nimport SimpleAlert from \"./SimpleAlert\";\nimport SuccessAlert from \"./SuccessAlert\";\nimport DangerAlert from \"./DangerAlert\";\nimport { Breadcrumb } from \"@gull\";\n\nclass AppAlert extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Alerts\" }\n          ]}\n        ></Breadcrumb>\n        <div className=\"mb-4\">\n          <SimpleAlert></SimpleAlert>\n        </div>\n\n        <div className=\"mb-4\">\n          <h4 className=\"mb-3\">Success Alert</h4>\n          <SuccessAlert></SuccessAlert>\n        </div>\n\n        <div className=\"mb-4\">\n          <h4 className=\"mb-3\">Danger Alert</h4>\n          <DangerAlert></DangerAlert>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppAlert;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (!as) {\n    props.type = type;\n  }\n\n  var Component = as || 'button';\n  return React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}