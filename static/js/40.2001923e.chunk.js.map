{"version":3,"sources":["../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js"],"names":["SelectableContext","React","createContext","makeEventKey","eventKey","href","String","NavContext","Button","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","DropdownContext","menuRef","toggleRef","onToggle","toggleNode","undefined","alignEnd","show","drop","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","useForceUpdate","useReducer","state","useDropdownMenu","options","_modifiers$arrow","context","useContext","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","flip","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","usePopper","shouldUsePopper","current","handleClose","e","toggle","setMenu","menuElement","toggleElement","placement","modifiers","toModifierMap","popper","enabled","eventListeners","arrow","menu","menuProps","id","childArgs","hasShown","close","style","styles","arrowProps","arrowStyles","useRootClose","clickTrigger","propTypes","children","PropTypes","func","isRequired","bool","oneOf","object","string","DropdownMenu","args","useDropdownToggle","_useContext","setToggle","DropdownToggle","_useDropdownToggle","_useDropdownToggle$","useWrappedRefWithWarning","componentName","split","childBsPrefix","_ref$as","toggleProps","useMergedRefs","onClick","alignRight","showProps","isNavbar","NavbarContext","_useDropdownMenu","PaginationBoxView","evt","selected","pageCount","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","index","leftSide","rightSide","page","breakView","createPageView","key","initialSelected","this","initialPage","disableInitialCallback","extraAriaContext","console","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","handlePageSelected","ariaLabel","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","tabIndex","role","onKeyPress","aria-disabled","onPageChange","PageView","ariaCurrent","aria-label","aria-current","BreakView","matchesImpl","focusFirstItemOnShow","itemSelector","defaultShow","Dropdown","rawShow","rawOnToggle","forceUpdate","_useUncontrolled","useUncontrolled","useCallback","lastShow","value","useEffect","usePrevious","lastSourceEvent","focusInDropdown","event","useMemo","contains","document","activeElement","focusToggle","useEventCallback","focus","maybeFocusFirst","focusType","node","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","test","first","getNextFocusedChild","offset","indexOf","Math","max","min","length","Provider","onKeyDown","target","tagName","next","preventDefault","_next","Menu","Toggle","DropdownItem","onSelect","propActive","onSelectCtx","activeKey","handleClick","uncontrolledProps","_useUncontrolled$as","navbar","handleToggle","nextShow","source","currentTarget","handleSelect","BaseDropdown","dropdownProps","Item","Header","createWithBsPrefix","Divider"],"mappings":"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","file":"static/js/40.2001923e.chunk.js","sourcesContent":["import React from 'react';\nvar SelectableContext = React.createContext();\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react';\nvar NavContext = React.createContext(null);\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (!as) {\n    props.type = type;\n  }\n\n  var Component = as || 'button';\n  return React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from 'react';\nvar DropdownContext = React.createContext({\n  menuRef: function menuRef() {},\n  toggleRef: function toggleRef() {},\n  onToggle: function onToggle() {},\n  toggleNode: undefined,\n  alignEnd: null,\n  show: null,\n  drop: null\n});\nexport default DropdownContext;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\nexport function useDropdownMenu(options) {\n  var _modifiers$arrow;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? true : _options$usePopper;\n  var show = context.show == null ? options.show : context.show;\n  var alignEnd = context.alignEnd == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    if (!context.toggle) return;\n    context.toggle(false, e);\n  };\n\n  var drop = context.drop,\n      setMenu = context.setMenu,\n      menuElement = context.menuElement,\n      toggleElement = context.toggleElement;\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var modifiers = toModifierMap(popperConfig.modifiers);\n  var popper = usePopper(toggleElement, menuElement, _extends({}, popperConfig, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!show\n      },\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  }));\n  var menu = null;\n  var menuProps = {\n    ref: setMenu,\n    'aria-labelledby': toggleElement && toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\nfunction DropdownMenu(_ref) {\n  var children = _ref.children,\n      options = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return args.hasShown ? children(args) : null;\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n/**\n * Wires up Dropdown toggle functinality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n */\n\nexport function useDropdownToggle() {\n  var _useContext = useContext(DropdownContext),\n      show = _useContext.show,\n      toggle = _useContext.toggle,\n      setToggle = _useContext.setToggle;\n\n  return [{\n    ref: setToggle,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\nfunction DropdownToggle(_ref) {\n  var children = _ref.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      _useDropdownToggle$ = _useDropdownToggle[1],\n      show = _useDropdownToggle$.show,\n      toggle = _useDropdownToggle$.toggle;\n\n  return children({\n    show: show,\n    toggle: toggle,\n    props: props\n  });\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar\n  }),\n      hasShown = _useDropdownMenu.hasShown,\n      placement = _useDropdownMenu.placement,\n      show = _useDropdownMenu.show,\n      alignEnd = _useDropdownMenu.alignEnd,\n      close = _useDropdownMenu.close,\n      menuProps = _useDropdownMenu.props;\n\n  menuProps.ref = useMergedRefs(menuProps.ref, useWrappedRefWithWarning(ref, 'DropdownMenu'));\n  if (!hasShown) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = close;\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, style, {}, menuProps.style);\n    props['x-placement'] = placement;\n  }\n\n  return React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","var matchesImpl;\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolled } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string.isRequired,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```js\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\nvar defaultProps = {\n  itemSelector: '* > *'\n};\n/**\n * `Dropdown` is set of structural components for building, accessible dropdown menus with close-on-click,\n * keyboard navigation, and correct focus handling. As with all the react-overlay's\n * components its BYOS (bring your own styles). Dropdown is primarily\n * built from three base components, you should compose to build your Dropdowns.\n *\n * - `Dropdown`, which wraps the menu and toggle, and handles keyboard navigation\n * - `Dropdown.Toggle` generally a button that triggers the menu opening\n * - `Dropdown.Menu` The overlaid, menu, positioned to the toggle with PopperJs\n */\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      itemSelector = _ref.itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n  var forceUpdate = useForceUpdate();\n\n  var _useUncontrolled = useUncontrolled({\n    defaultShow: defaultShow,\n    show: rawShow,\n    onToggle: rawOnToggle\n  }, {\n    show: 'onToggle'\n  }),\n      show = _useUncontrolled.show,\n      onToggle = _useUncontrolled.onToggle;\n\n  var _useCallbackRef = useCallbackRef(),\n      toggleElement = _useCallbackRef[0],\n      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var menuRef = useRef();\n  var menuElement = menuRef.current;\n  var setMenu = useCallback(function (ref) {\n    menuRef.current = ref; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (event) {\n    onToggle(!show, event);\n  }, [onToggle, show]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var key = event.key,\n        target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          toggle(event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Escape':\n      case 'Tab':\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  };\n\n  return React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children({\n    props: {\n      onKeyDown: handleKeyDown\n    }\n  }));\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.defaultProps = defaultProps;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SafeAnchor from './SafeAnchor';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    href: href,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n    onClick: handleClick\n  }), children);\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"]);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document) source = 'rootClose';\n    onToggle(nextShow, event, {\n      source: source\n    });\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, function (_ref) {\n    var dropdownProps = _ref.props;\n    return React.createElement(Component, _extends({}, props, dropdownProps, {\n      ref: ref,\n      className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n    }));\n  }));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Toggle = DropdownToggle;\nDropdown.Menu = DropdownMenu;\nDropdown.Item = DropdownItem;\nDropdown.Header = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nDropdown.Divider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nexport default Dropdown;"],"sourceRoot":""}