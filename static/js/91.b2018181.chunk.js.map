{"version":3,"sources":["../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","app/views/ui-kits/carousel/AppCarousel.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js"],"names":["useUpdateEffect","fn","deps","isFirst","useRef","useEffect","current","createWithBsPrefix","Component","defaultProps","slide","fade","controls","indicators","defaultActiveIndex","interval","keyboard","pause","wrap","touch","prevIcon","React","createElement","className","prevLabel","nextIcon","nextLabel","Carousel","forwardRef","uncontrolledProps","ref","_useUncontrolled","useUncontrolled","activeIndex","_useUncontrolled$as","as","bsPrefix","onSelect","onSlide","onSlid","onKeyDown","onMouseOver","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","children","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","nextDirectionRef","_useState","useState","direction","setDirection","_useState2","isSliding","setIsSliding","_useState3","renderedActiveIndex","setRenderedActiveIndex","numChildren","Children","toArray","filter","isValidElement","length","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","style","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","target","tagName","key","preventDefault","_useState4","pausedOnHover","setPausedOnHover","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","_useState5","pausedOnTouch","setPausedOnTouch","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","Math","abs","set","shouldPlay","intervalHandleRef","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","Array","from","_","index","_extends","classNames","map","child","onClick","isActive","Transition","in","onEnter","onEntered","addEndListener","transitionEnd","status","cloneElement","Fragment","SafeAnchor","displayName","Caption","CarouselCaption","Item","CarouselItem","AppCarousel","state","carouselImageList","this","routeSegments","name","path","img","ind","src","alt","func","forEach"],"mappings":"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","file":"static/js/91.b2018181.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\n\nfunction useUpdateEffect(fn, deps) {\n  var isFirst = useRef(true);\n  useEffect(function () {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    return fn();\n  }, deps);\n}\n\nexport default useUpdateEffect;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('carousel-caption', {\n  Component: 'div'\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('carousel-item');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport classNames from 'classnames';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport Transition from 'react-transition-group/Transition';\nimport React, { useCallback, useEffect, useMemo, useRef, useState, useImperativeHandle } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map } from './ElementChildren';\nimport SafeAnchor from './SafeAnchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar SWIPE_THRESHOLD = 40;\nvar defaultProps = {\n  slide: true,\n  fade: false,\n  controls: true,\n  indicators: true,\n  defaultActiveIndex: 0,\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  wrap: true,\n  touch: true,\n  prevIcon: React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-prev-icon\"\n  }),\n  prevLabel: 'Previous',\n  nextIcon: React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-next-icon\"\n  }),\n  nextLabel: 'Next'\n};\n\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n\n  var elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\n\nvar Carousel = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    activeIndex: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      slide = _useUncontrolled.slide,\n      fade = _useUncontrolled.fade,\n      controls = _useUncontrolled.controls,\n      indicators = _useUncontrolled.indicators,\n      activeIndex = _useUncontrolled.activeIndex,\n      onSelect = _useUncontrolled.onSelect,\n      onSlide = _useUncontrolled.onSlide,\n      onSlid = _useUncontrolled.onSlid,\n      interval = _useUncontrolled.interval,\n      keyboard = _useUncontrolled.keyboard,\n      onKeyDown = _useUncontrolled.onKeyDown,\n      pause = _useUncontrolled.pause,\n      onMouseOver = _useUncontrolled.onMouseOver,\n      onMouseOut = _useUncontrolled.onMouseOut,\n      wrap = _useUncontrolled.wrap,\n      touch = _useUncontrolled.touch,\n      onTouchStart = _useUncontrolled.onTouchStart,\n      onTouchMove = _useUncontrolled.onTouchMove,\n      onTouchEnd = _useUncontrolled.onTouchEnd,\n      prevIcon = _useUncontrolled.prevIcon,\n      prevLabel = _useUncontrolled.prevLabel,\n      nextIcon = _useUncontrolled.nextIcon,\n      nextLabel = _useUncontrolled.nextLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"bsPrefix\", \"slide\", \"fade\", \"controls\", \"indicators\", \"activeIndex\", \"onSelect\", \"onSlide\", \"onSlid\", \"interval\", \"keyboard\", \"onKeyDown\", \"pause\", \"onMouseOver\", \"onMouseOut\", \"wrap\", \"touch\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\", \"prevIcon\", \"prevLabel\", \"nextIcon\", \"nextLabel\", \"className\", \"children\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  var nextDirectionRef = useRef(null);\n\n  var _useState = useState('next'),\n      direction = _useState[0],\n      setDirection = _useState[1];\n\n  var _useState2 = useState(false),\n      isSliding = _useState2[0],\n      setIsSliding = _useState2[1];\n\n  var _useState3 = useState(activeIndex),\n      renderedActiveIndex = _useState3[0],\n      setRenderedActiveIndex = _useState3[1];\n\n  if (!isSliding && activeIndex !== renderedActiveIndex) {\n    if (nextDirectionRef.current) {\n      setDirection(nextDirectionRef.current);\n      nextDirectionRef.current = null;\n    } else {\n      setDirection(activeIndex > renderedActiveIndex ? 'next' : 'prev');\n    }\n\n    if (slide) {\n      setIsSliding(true);\n    }\n\n    setRenderedActiveIndex(activeIndex);\n  }\n\n  var numChildren = React.Children.toArray(children).filter(React.isValidElement).length;\n  var prev = useCallback(function (event) {\n    if (isSliding) {\n      return;\n    }\n\n    var nextActiveIndex = renderedActiveIndex - 1;\n\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = numChildren - 1;\n    }\n\n    nextDirectionRef.current = 'prev';\n    onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]); // This is used in the setInterval, so it should not invalidate.\n\n  var next = useEventCallback(function (event) {\n    if (isSliding) {\n      return;\n    }\n\n    var nextActiveIndex = renderedActiveIndex + 1;\n\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = 0;\n    }\n\n    nextDirectionRef.current = 'next';\n    onSelect(nextActiveIndex, event);\n  });\n  var elementRef = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      element: elementRef.current,\n      prev: prev,\n      next: next\n    };\n  }); // This is used in the setInterval, so it should not invalidate.\n\n  var nextWhenVisible = useEventCallback(function () {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      next();\n    }\n  });\n  var slideDirection = direction === 'next' ? 'left' : 'right';\n  useUpdateEffect(function () {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n\n    if (onSlide) {\n      onSlide(renderedActiveIndex, slideDirection);\n    }\n\n    if (onSlid) {\n      onSlid(renderedActiveIndex, slideDirection);\n    }\n  }, [renderedActiveIndex]);\n  var orderClassName = prefix + \"-item-\" + direction;\n  var directionalClassName = prefix + \"-item-\" + slideDirection;\n  var handleEnter = useCallback(function (node) {\n    triggerBrowserReflow(node);\n\n    if (onSlide) {\n      onSlide(renderedActiveIndex, slideDirection);\n    }\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  var handleEntered = useCallback(function () {\n    setIsSliding(false);\n\n    if (onSlid) {\n      onSlid(renderedActiveIndex, slideDirection);\n    }\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  var handleKeyDown = useCallback(function (event) {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          prev(event);\n          return;\n\n        case 'ArrowRight':\n          event.preventDefault();\n          next(event);\n          return;\n\n        default:\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  }, [keyboard, onKeyDown, prev, next]);\n\n  var _useState4 = useState(false),\n      pausedOnHover = _useState4[0],\n      setPausedOnHover = _useState4[1];\n\n  var handleMouseOver = useCallback(function (event) {\n    if (pause === 'hover') {\n      setPausedOnHover(true);\n    }\n\n    if (onMouseOver) {\n      onMouseOver(event);\n    }\n  }, [pause, onMouseOver]);\n  var handleMouseOut = useCallback(function (event) {\n    setPausedOnHover(false);\n\n    if (onMouseOut) {\n      onMouseOut(event);\n    }\n  }, [onMouseOut]);\n  var touchStartXRef = useRef(0);\n  var touchDeltaXRef = useRef(0);\n\n  var _useState5 = useState(false),\n      pausedOnTouch = _useState5[0],\n      setPausedOnTouch = _useState5[1];\n\n  var touchUnpauseTimeout = useTimeout();\n  var handleTouchStart = useCallback(function (event) {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n\n    if (touch) {\n      setPausedOnTouch(true);\n    }\n\n    if (onTouchStart) {\n      onTouchStart(event);\n    }\n  }, [touch, onTouchStart]);\n  var handleTouchMove = useCallback(function (event) {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n\n    if (onTouchMove) {\n      onTouchMove(event);\n    }\n  }, [onTouchMove]);\n  var handleTouchEnd = useCallback(function (event) {\n    if (touch) {\n      var touchDeltaX = touchDeltaXRef.current;\n\n      if (Math.abs(touchDeltaX) <= SWIPE_THRESHOLD) {\n        return;\n      }\n\n      if (touchDeltaX > 0) {\n        prev(event);\n      } else {\n        next(event);\n      }\n    }\n\n    touchUnpauseTimeout.set(function () {\n      setPausedOnTouch(false);\n    }, interval);\n\n    if (onTouchEnd) {\n      onTouchEnd(event);\n    }\n  }, [touch, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  var shouldPlay = interval != null && !pausedOnHover && !pausedOnTouch && !isSliding;\n  var intervalHandleRef = useRef();\n  useEffect(function () {\n    if (!shouldPlay) {\n      return undefined;\n    }\n\n    intervalHandleRef.current = setInterval(document.visibilityState ? nextWhenVisible : next, interval);\n    return function () {\n      clearInterval(intervalHandleRef.current);\n    };\n  }, [shouldPlay, next, interval, nextWhenVisible]);\n  var indicatorOnClicks = useMemo(function () {\n    return indicators && Array.from({\n      length: numChildren\n    }, function (_, index) {\n      return function (event) {\n        onSelect(index, event);\n      };\n    });\n  }, [indicators, numChildren, onSelect]);\n  return React.createElement(Component, _extends({\n    ref: elementRef\n  }, props, {\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && prefix + \"-fade\")\n  }), indicators && React.createElement(\"ol\", {\n    className: prefix + \"-indicators\"\n  }, map(children, function (child, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      className: index === renderedActiveIndex ? 'active' : null,\n      onClick: indicatorOnClicks[index]\n    });\n  })), React.createElement(\"div\", {\n    className: prefix + \"-inner\"\n  }, map(children, function (child, index) {\n    var isActive = index === renderedActiveIndex;\n    return slide ? React.createElement(Transition, {\n      in: isActive,\n      onEnter: isActive ? handleEnter : null,\n      onEntered: isActive ? handleEntered : null,\n      addEndListener: transitionEnd\n    }, function (status) {\n      return React.cloneElement(child, {\n        className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n      });\n    }) : React.cloneElement(child, {\n      className: classNames(child.props.className, isActive && 'active')\n    });\n  })), controls && React.createElement(React.Fragment, null, (wrap || activeIndex !== 0) && React.createElement(SafeAnchor, {\n    className: prefix + \"-control-prev\",\n    onClick: prev\n  }, prevIcon, prevLabel && React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, prevLabel)), (wrap || activeIndex !== numChildren - 1) && React.createElement(SafeAnchor, {\n    className: prefix + \"-control-next\",\n    onClick: next\n  }, nextIcon, nextLabel && React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, nextLabel))));\n});\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = defaultProps;\nCarousel.Caption = CarouselCaption;\nCarousel.Item = CarouselItem;\nexport default Carousel;","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Carousel } from \"react-bootstrap\";\n\nclass AppCarousel extends Component {\n  state = {\n    carouselImageList: [\n      \"/assets/images/products/iphone-1.jpg\",\n      \"/assets/images/products/headphone-1.jpg\",\n      \"/assets/images/products/iphone-1.jpg\"\n    ]\n  };\n\n  render() {\n    let { carouselImageList } = this.state;\n\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Carousel\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"mb-3\">\n          <div className=\"row mb-4\">\n            <div className=\"col-md-6\">\n              <p>\n                use a large block of connected links for our pagination, making\n                links hard to miss and easily scalable—all while providing large\n                hit areas. Pagination is built with list HTML elements so screen\n                readers can announce the number of available links. Use a\n                wrapping\n                <code>nav</code> element to identify it as a navigation section\n                to screen readers and other assistive technologies.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-6 mb-4\">\n              <div className=\"card text-left\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title mb-3\">\n                    Basic Carousel With Control\n                  </h4>\n                  <p>\n                    can also add the indicators to the carousel, alongside the\n                    controls, too\n                  </p>\n\n                  <Carousel indicators={false}>\n                    {carouselImageList.map((img, ind) => (\n                      <Carousel.Item key={ind}>\n                        <img\n                          className=\"d-block w-100\"\n                          src={img}\n                          alt=\"First slide\"\n                        />\n                      </Carousel.Item>\n                    ))}\n                  </Carousel>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 mb-4\">\n              <div className=\"card text-left\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title mb-3\">Carousel With Indicators</h4>\n                  <p>Adding in the previous and next controls</p>\n                  <Carousel>\n                    {carouselImageList.map((img, ind) => (\n                      <Carousel.Item key={ind}>\n                        <img\n                          className=\"d-block w-100\"\n                          src={img}\n                          alt=\"First slide\"\n                        />\n                      </Carousel.Item>\n                    ))}\n                  </Carousel>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-6 mb-4\">\n              <div className=\"card text-left\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title mb-3\"> Carousel With Caption</h4>\n                  <p>\n                    Add captions to your slides easily with the\n                    <code>{`<Carousel.Caption>`}</code> element within any\n                    <code>{`<Carousel.Item>`}</code> . They can be easily hidden\n                    on smaller viewports, as shown below, with optional display\n                    utilities.\n                  </p>\n                  <Carousel indicators={false}>\n                    {carouselImageList.map((img, ind) => (\n                      <Carousel.Item key={ind}>\n                        <img\n                          className=\"d-block w-100\"\n                          src={img}\n                          alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                          <h5 className=\"text-white\">\n                            Add captions to your slides easily\n                          </h5>\n                          <p>\n                            Lorem ipsum dolor sit amet consectetur adipisicing\n                            elit.\n                          </p>\n                        </Carousel.Caption>\n                      </Carousel.Item>\n                    ))}\n                  </Carousel>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 mb-4\">\n              <div className=\"card text-left\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title mb-3\">Carousel With CrossFade</h4>\n                  <p>\n                    Add <code>{`fade={true}`}</code> to your carousel component\n                    to animate slides with a fade transition instead of a slide.\n                  </p>\n                  <Carousel fade={true}>\n                    {carouselImageList.map((img, ind) => (\n                      <Carousel.Item key={ind}>\n                        <img\n                          className=\"d-block w-100\"\n                          src={img}\n                          alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                          <h5 className=\"text-white\">\n                            Add captions to your slides easily\n                          </h5>\n                          <p>\n                            Lorem ipsum dolor sit amet consectetur adipisicing\n                            elit.\n                          </p>\n                        </Carousel.Caption>\n                      </Carousel.Item>\n                    ))}\n                  </Carousel>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppCarousel;\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if (React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };"],"sourceRoot":""}